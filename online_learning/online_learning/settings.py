"""
Django settings for online_learning project.

Generated by 'django-admin startproject' using Django 3.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import datetime
import os
import sys
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-u=a5%y)q=qow(hkr@kq)+%whl*-jphm^_#zvyecut18fpow*6m'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'simpleui',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # swagger 文档
    'drf_yasg',
    'rest_framework',
    'link_resource',
    'snippets',
    'user',
    'django_filters',
    # django-rest-framework-social-oauth2
    'oauth2_provider',
    # 'social_django',
    # 'rest_framework_social_oauth2',
    # django-import-export
    'import_export',
    # django-daterange-filter
    'daterange_filter',
    # django-cors-headers
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 跨域配置
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
]

ROOT_URLCONF = 'online_learning.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # OAuth
                # 'social_django.context_processors.backends',
                # 'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'online_learning.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # }
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'online_learning',
        'USER': 'dreamcode',
        'PASSWORD': 'dreamcode@1025',
        'HOST': 'db',
        'PORT': '3306'
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME':
        'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {
    # 默认的验证是按照验证列表 从上到下 的验证
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # 配置JWT认证
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        # 配置session_id认证
        'rest_framework.authentication.SessionAuthentication',
        # 配置默认的认证方式 base:账号密码验证
        'rest_framework.authentication.BasicAuthentication',
        # 'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
        # 'rest_framework_social_oauth2.authentication.SocialAuthentication',
    ),
    # 默认全局权限配置
    'DEFAULT_PERMISSION_CLASSES': [
        # 'rest_framework.permissions.IsAuthenticated',
        # 'rest_framework.permissions.IsAdminUser',
        'rest_framework.permissions.AllowAny',
    ],
    # 限流配置
    # "DEFAULT_THROTTLE_CLASSES": ["link_resource.throttles.UserThrottle"],
    # "DEFAULT_THROTTLE_RATES": {
    #     "anonymous": '5/m',
    #     "user": '10/m',
    # }
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.ScopedRateThrottle',
    ],
    'DEFAULT_THROTTLE_RATES': {
        'link_resources': '120/m',
        'tags': '120/m',
        'snippets': '120/m',
    },
    # 指定过滤后端
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
    ],
    'DEFAULT_SCHEMA_CLASS':
    'rest_framework.schemas.coreapi.AutoSchema',
}

JWT_AUTH = {
    # 允许刷新token
    'JWT_ALLOW_REFRESH': True,
    # 每次刷新后，token的有效时间
    'JWT_REFRESH_EXPIRATION_DELTA': datetime.timedelta(days=300),
    # 生成 token 后，最大的有效时间：在有效期内通过刷新可以保持token有效；超过这个时间后，token失效，刷新也不起作用
    'JWT_EXPIRATION_DELTA': datetime.timedelta(days=1),
    'JWT_AUTH_HEADER_PREFIX': 'Bearer',
}

AUTHENTICATION_BACKENDS = (
    'social_core.backends.weibo.WeiboOAuth2',
    'social_core.backends.weixin.WeixinOAuth2',
    'social_core.backends.qq.QQOAuth2',
    # GitHub OAuth2
    # 'social_core.backends.github.GithubOAuth2',
    # Django
    'django.contrib.auth.backends.ModelBackend',
    # django-rest-framework-social-oauth2
    # 'rest_framework_social_oauth2.backends.DjangoOAuth2',
)

# Google configuration
# SOCIAL_AUTH_GITHUB_OAUTH2_KEY = '3c5e29dd17f238ccd0d6'
# SOCIAL_AUTH_GITHUB_OAUTH2_SECRET = 'e6e3f6b3d52f8cffb6230660f07c10edc5c45cd6'
# SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/link_resources/'

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / "static"

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / "media"

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 七牛云存储配置
# 对应 秘钥管理中的 AK
QINIU_ACCESS_KEY = 'rlPzK0fK-s7BofmoLM4PhZi2jWz50ldj04P4aYIf'
# 对应 秘钥管理中的 SK
QINIU_SECRET_KEY = 'QTKeyZzs6rGCw9IiQOMFtoErQMHvWp8N28uCGayN'
# 对应 存储空间 中的 空间名
QINIU_BUCKET_NAME = 'dreamcode-blog'
# 对应 存储空间 的域名
QINIU_BUCKET_DOMAIN = 'blog-docs.dreamcode1025.cn'

# 使用http
QINIU_SECURE_URL = False
# URL的 scheme 前缀
PREFIX_URL = 'http://'
# 文件存储的 前置path
MEDIA_ROOT = '/media/'
# 文件的URL前缀
MEDIA_URL = PREFIX_URL + QINIU_BUCKET_DOMAIN + MEDIA_ROOT
# 修改 默认的文件存储类
DEFAULT_FILE_STORAGE = 'qiniustorage.backends.QiniuMediaStorage'

# 邮箱配置
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# 发送邮箱验证码
MAIL_SMTP_SERVER = 'smtp.163.com'     # 服务器
EMAIL_PORT = 25                 # 一般情况下都为25
MAIL_FROM_ADDR = "runqian0813@163.com"     # 账号
MAIL_PASSWORD = "KJEESPMKNIHFATYD"          # 密码 (注意：这里的密码指的是授权码)
EMAIL_USE_TLS = True       # 一般都为False
EMAIL_FROM = "runqian0813@163.com"      # 邮箱来自
# 发送邮箱间隔时间 30 s
MAIL_INTERVAL = 30
# 验证码有效时间 30 m
VCODE_EXPIRE = 60 * 30

# 跨域配置
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True
CORS_ORIGIN_WHITELIST = ()

CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
    'VIEW',
)

CORS_ALLOW_HEADERS = (
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
)
